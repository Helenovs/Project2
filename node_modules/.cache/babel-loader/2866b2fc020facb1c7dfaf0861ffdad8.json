{"ast":null,"code":"import _classCallCheck from \"/Users/elena/Documents/GA/week9/PROJECT/project2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elena/Documents/GA/week9/PROJECT/project2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elena/Documents/GA/week9/PROJECT/project2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elena/Documents/GA/week9/PROJECT/project2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elena/Documents/GA/week9/PROJECT/project2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/elena/Documents/GA/week9/PROJECT/project2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/elena/Documents/GA/week9/PROJECT/project2/src/Components/chatroom/Chatroom.js\";\nimport React, { Component } from 'react';\nimport fb from './../../config/Firebase';\nimport MessageList from './MessageList';\nimport SendMessageForm from './SendMessageForm';\n\nvar Chatroom =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chatroom, _Component);\n\n  function Chatroom() {\n    var _this;\n\n    _classCallCheck(this, Chatroom);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chatroom).call(this));\n    _this.state = {\n      messages: {},\n      user: {}\n    };\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.authListener();\n\n    return _this;\n  }\n\n  _createClass(Chatroom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchMessages();\n    }\n  }, {\n    key: \"authListener\",\n    value: function authListener() {\n      var _this2 = this;\n\n      fb.auth().onAuthStateChanged(function (user) {\n        // console.log(user);\n        if (user) {\n          _this2.setState({\n            user: user\n          }); // localStorage.setItem('user', user.uid);\n\n        } else {\n          _this2.setState({\n            user: null\n          }); // localStorage.removeItem('user')\n\n        }\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(text) {\n      // this.setState({\n      //   messages : [...this.state.messages, {text, senderId: this.state.user.email}]\n      // })\n      var messageDB = fb.database().ref().child(\"game_rooms\").child(this.props.id).child(\"messages\");\n      messageDB.push({\n        text: text,\n        senderId: this.state.user.email\n      });\n    }\n  }, {\n    key: \"fetchMessages\",\n    value: function fetchMessages() {\n      var _this3 = this;\n\n      var messageDB = fb.database().ref().child(\"game_rooms\").child(this.props.id).child(\"messages\");\n      messageDB.on('value', function (snap) {\n        _this3.setState({\n          messages: snap.val()\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"chatroom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(MessageList, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(SendMessageForm, {\n        sendMessage: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chatroom;\n}(Component);\n\nexport default Chatroom;","map":{"version":3,"sources":["/Users/elena/Documents/GA/week9/PROJECT/project2/src/Components/chatroom/Chatroom.js"],"names":["React","Component","fb","MessageList","SendMessageForm","Chatroom","state","messages","user","sendMessage","bind","authListener","fetchMessages","auth","onAuthStateChanged","setState","text","messageDB","database","ref","child","props","id","push","senderId","email","on","snap","val"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,yBAAf;AAGA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;IAEMC,Q;;;;;AACJ,sBAAa;AAAA;;AAAA;;AACX;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAG,EADA;AAEXC,MAAAA,IAAI,EAAG;AAFI,KAAb;AAIA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;;AACA,UAAKC,YAAL;;AAPW;AAQZ;;;;wCAEkB;AACjB,WAAKC,aAAL;AACD;;;mCAEc;AAAA;;AACbV,MAAAA,EAAE,CAACW,IAAH,GAAUC,kBAAV,CACE,UAACN,IAAD,EAAU;AACR;AACA,YAAIA,IAAJ,EAAU;AACR,UAAA,MAAI,CAACO,QAAL,CAAc;AAAEP,YAAAA,IAAI,EAAJA;AAAF,WAAd,EADQ,CAER;;AACD,SAHD,MAGO;AACL,UAAA,MAAI,CAACO,QAAL,CAAc;AAAEP,YAAAA,IAAI,EAAE;AAAR,WAAd,EADK,CAEL;;AACD;AACF,OAVH;AAYD;;;gCAEWQ,I,EAAM;AAChB;AACA;AACA;AACA,UAAMC,SAAS,GAAGf,EAAE,CAACgB,QAAH,GAAcC,GAAd,GAAoBC,KAApB,CAA0B,YAA1B,EAAwCA,KAAxC,CAA8C,KAAKC,KAAL,CAAWC,EAAzD,EAA6DF,KAA7D,CAAmE,UAAnE,CAAlB;AACAH,MAAAA,SAAS,CAACM,IAAV,CAAe;AACbP,QAAAA,IAAI,EAAJA,IADa;AAEbQ,QAAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWE,IAAX,CAAgBiB;AAFb,OAAf;AAID;;;oCAEc;AAAA;;AACb,UAAMR,SAAS,GAAGf,EAAE,CAACgB,QAAH,GAAcC,GAAd,GAAoBC,KAApB,CAA0B,YAA1B,EAAwCA,KAAxC,CAA8C,KAAKC,KAAL,CAAWC,EAAzD,EAA6DF,KAA7D,CAAmE,UAAnE,CAAlB;AACAH,MAAAA,SAAS,CAACS,EAAV,CAAa,OAAb,EAAsB,UAAAC,IAAI,EAAI;AAC5B,QAAA,MAAI,CAACZ,QAAL,CAAc;AACZR,UAAAA,QAAQ,EAAGoB,IAAI,CAACC,GAAL;AADC,SAAd;AAGD,OAJD;AAKD;;;6BAEQ;AACL,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,eAAD;AAAiB,QAAA,WAAW,EAAG,KAAKE,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADF;AAOH;;;;EA1DoBR,S;;AA6DvB,eAAeI,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport fb from './../../config/Firebase'\n\n\nimport MessageList from './MessageList'\nimport SendMessageForm from './SendMessageForm'\n\nclass Chatroom extends Component {\n  constructor(){\n    super();\n    this.state = {\n      messages : {},\n      user : {}\n    }\n    this.sendMessage = this.sendMessage.bind(this)\n    this.authListener()\n  }\n\n  componentDidMount(){\n    this.fetchMessages()\n  }\n\n  authListener() {\n    fb.auth().onAuthStateChanged(\n      (user) => {\n        // console.log(user);\n        if (user) {\n          this.setState({ user });\n          // localStorage.setItem('user', user.uid);\n        } else {\n          this.setState({ user: null })\n          // localStorage.removeItem('user')\n        }\n      }\n    )\n  }\n\n  sendMessage(text) {\n    // this.setState({\n    //   messages : [...this.state.messages, {text, senderId: this.state.user.email}]\n    // })\n    const messageDB = fb.database().ref().child(\"game_rooms\").child(this.props.id).child(\"messages\")\n    messageDB.push({\n      text,\n      senderId: this.state.user.email\n    })\n  }\n\n  fetchMessages(){\n    const messageDB = fb.database().ref().child(\"game_rooms\").child(this.props.id).child(\"messages\")\n    messageDB.on('value', snap => {\n      this.setState({\n        messages : snap.val()\n      })\n    })\n  }\n\n  render() {\n      return (\n        <div className=\"chatroom\">\n\n            <MessageList messages={this.state.messages}/>\n            <SendMessageForm sendMessage={ this.sendMessage }/>\n        </div>\n      );\n  }\n}\n\nexport default Chatroom\n"]},"metadata":{},"sourceType":"module"}